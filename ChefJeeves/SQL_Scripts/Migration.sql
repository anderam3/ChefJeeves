USE `chefjeeves`;
SET FOREIGN_KEY_CHECKS=1;

DROP TABLE IF EXISTS `AccountRecipe`;
DROP TABLE IF EXISTS `RecipeIngredient`;
DROP TABLE IF EXISTS `AccountIngredient`;
DROP TABLE IF EXISTS `Recipe`;
DROP TABLE IF EXISTS `Measurement`;
DROP TABLE IF EXISTS `Account`;
DROP TABLE IF EXISTS `Ingredient`;

DROP PROCEDURE IF EXISTS `EmailExists`;
DROP PROCEDURE IF EXISTS `InsertUser`;
DROP PROCEDURE IF EXISTS `UsernameExists`;
DROP PROCEDURE IF EXISTS `VerifyPassword`;

CREATE TABLE `account` (
	`USERNAME` varchar(64) NOT NULL,
	`EMAIL` varchar(64) NOT NULL,
	`FULL_NAME` varchar(64) NOT NULL,
	`SECURITY_QUESTION` varchar(64) NOT NULL,
	`SECURITY_ANSWER` varchar(512) NOT NULL,
	`PASSCODE` varchar(512) NOT NULL,
	`SALT` float NOT NULL,
  PRIMARY KEY (`USERNAME`,`EMAIL`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `Recipe` (
	`RECIPE_ID` int(11) NOT NULL AUTO_INCREMENT,
	`RECIPE_NAME` varchar(64) NOT NULL,
	`PREPARATION` text NOT NULL,
  PRIMARY KEY (`RECIPE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `AccountRecipe` (
	`USERNAME` varchar(64) NOT NULL,
	`RECIPE_ID` int(11) NOT NULL,
	PRIMARY KEY (`USERNAME`,`RECIPE_ID`),
	CONSTRAINT `AccountRecipe_USERNAME` FOREIGN KEY (`USERNAME`) REFERENCES `Account` (`USERNAME`) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT `AccountRecipe_RECIPE_ID` FOREIGN KEY (`RECIPE_ID`) REFERENCES `Recipe` (`RECIPE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `Ingredient` (
	`INGREDIENT_NAME` varchar(64) NOT NULL,
	PRIMARY KEY (`INGREDIENT_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `Measurement` (
	`UNIT_ABBREVIATION` varchar(64) NOT NULL,
	`UNIT_NAME` varchar(64) NOT NULL,
	PRIMARY KEY (`UNIT_ABBREVIATION`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `RecipeIngredient` (
	`RECIPE_ID` int(11) NOT NULL,
	`INGREDIENT_NAME` varchar(64) NOT NULL,
	`QUANTITY` float NOT NULL,
	`UNIT_ABBREVIATION` varchar(64),
	PRIMARY KEY (`RECIPE_ID`,`INGREDIENT_NAME`),
	CONSTRAINT `RecipeIngredient_RECIPE_ID` FOREIGN KEY (`RECIPE_ID`) REFERENCES `Recipe` (`RECIPE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT `RecipeIngredient_INGREDIENT_NAME` FOREIGN KEY (`INGREDIENT_NAME`) REFERENCES `Ingredient` (`INGREDIENT_NAME`) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT `RecipeIngredient_UNIT_ABBREVIATION` FOREIGN KEY (`UNIT_ABBREVIATION`) REFERENCES `Measurement` (`UNIT_ABBREVIATION`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `AccountIngredient` (
	`USERNAME` varchar(64) NOT NULL,
	`INGREDIENT_NAME` varchar(64) NOT NULL,
	PRIMARY KEY (`USERNAME`,`INGREDIENT_NAME`),
	CONSTRAINT `AccountIngredient_USERNAME` FOREIGN KEY (`USERNAME`) REFERENCES `Account` (`USERNAME`) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT `AccountIngredient_INGREDIENT_NAME` FOREIGN KEY (`INGREDIENT_NAME`) REFERENCES `Ingredient` (`INGREDIENT_NAME`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DELIMITER $$

CREATE PROCEDURE `EmailExists`(
  IN Address VARCHAR(64),
  OUT Result tinyint(1)
)
BEGIN
  DECLARE vEmail VARCHAR(64);
  SET vEmail= (SELECT Email FROM account WHERE email = Address LIMIT 1);
  IF vEmail = Address THEN
    SET Result = 1;
  ELSE
    SET Result = 0;
  END IF;
END$$

CREATE PROCEDURE `InsertUser`(
	User varchar(64),
    Address varchar (64),
    FullName varchar(64),
    Pass varchar(512),
    Question varchar(512),
    Answer varchar(512)
)
BEGIN
	DECLARE vSalt FLOAT;
    SET vSalt = RAND();
    SET Pass = SHA2(CONCAT(Pass, vSalt),512);
    SET Answer = SHA2(CONCAT(Answer, vSalt),512);
    INSERT INTO `Account` VALUES (User, Address, FullName, Question, Answer, Pass, vSalt);
END$$

CREATE PROCEDURE `UsernameExists`(
  IN User VARCHAR(64),
  OUT Result tinyint(1)
)
BEGIN
  DECLARE vUserName VARCHAR(64);
  SET vUserName= (SELECT Username FROM account WHERE username = User LIMIT 1);
  IF vUserName = User THEN
    SET Result = 1;
  ELSE
    SET Result = 0;
  END IF;
END$$

CREATE PROCEDURE `VerifyPassword`(
  IN User VARCHAR(64),
  IN Pass VARCHAR(512),
  OUT IsSuccessful tinyint(1)
)
BEGIN
  DECLARE vSalt FLOAT;
  DECLARE vPassCode1 VARCHAR(512);
  DECLARE vPassCode2 VARCHAR(512);
  SET vSalt = (SELECT Salt FROM account WHERE username = user LIMIT 1);
  SET vPassCode1 = (SELECT Passcode FROM account WHERE username = user LIMIT 1);
  SET vPassCode2 = SHA2(CONCAT(Pass, vSalt),512);
  IF vPassCode1 = vPassCode2 THEN
    SET IsSuccessful = 1;
  ELSE
    SET IsSuccessful = 0;
  END IF;
END$$

'Sample password is *888uuu and security answer is 23 before hash and salt. An sanple image must reside in the Profiles folder names jsmith.jpg'
DELIMITER ;

INSERT INTO `account` (`USERNAME`,`EMAIL`,`FULL_NAME`,`SECURITY_QUESTION`,`SECURITY_ANSWER`,`PASSCODE`,`SALT`) VALUES ('jsmith','john.smith@email.com','John Smith','Age?','5ee521184a46f3bd25f08f60b922e3acc6c0ff60f219c102511b6f9c1aa0b05f606c4d93303030596b790cb402a06030b676a12e2460e0ff95fc5a0d1e3c8767','d064295332f4f5235f21bd8ad73941e810a81cdced996a35e7de7773fd35ef517f93589867d6ba4596604020a9a29110206c4f109dab3db5d64a260c34f0006b',0.999581);

INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('bacon');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('brown bean');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('butter');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('egg');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('flour');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('garlic');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('milk');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('olive oil');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('orange');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('pepper');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('salt');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('strawberry');
INSERT INTO `ingredient`(`INGREDIENT_NAME`) VALUES ('tomato');

INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('tsp', 'teaspoon');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('tbsp', 'tablespoon');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('cup', 'cup');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('oz', 'ounce');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('fl.oz', 'fluid ounce');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('pt', 'pint');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('pinch', 'pinch');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('qt', 'quart');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('gal', 'gallon');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('lb', 'pound');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('doz', 'dozen');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('pkg', 'package');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('sm', 'small');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('med', 'medium');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('lg', 'large');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('sq', 'square');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('approx', 'approximately');
INSERT INTO MEASUREMENT(UNIT_ABBREVIATION, UNIT_NAME) VALUES ('min', 'minutes');


INSERT INTO RECIPE (RECIPE_NAME, PREPARATION) 
VALUES ('Scrambled Eggs', 'BEAT eggs, milk, salt and pepper in medium bowl until blended.
HEAT butter in large nonstick skillet over medium heat until hot. POUR IN egg mixture. As eggs begin to set, GENTLY PULL the eggs across the pan with a spatula, forming large soft curds.
CONTINUE cooking – pulling, lifting and folding eggs – until thickened and no visible liquid egg remains. Do not stir constantly. REMOVE from heat. SERVE immediately.');

INSERT INTO accountrecipe(USERNAME, RECIPE_ID) VALUES ('jsmith', 1);

INSERT INTO recipeingredient(RECIPE_ID, INGREDIENT_NAME, QUANTITY) VALUES (1, 'egg', 4);
INSERT INTO recipeingredient(RECIPE_ID, INGREDIENT_NAME, QUANTITY, UNIT_ABBREVIATION) VALUES (1,'milk',0.25,'cup');
INSERT INTO recipeingredient(RECIPE_ID, INGREDIENT_NAME, QUANTITY, UNIT_ABBREVIATION) VALUES (1,'salt',1,'pinch');
INSERT INTO recipeingredient(RECIPE_ID, INGREDIENT_NAME, QUANTITY, UNIT_ABBREVIATION) VALUES (1,'pepper',1,'pinch');
INSERT INTO recipeingredient(RECIPE_ID, INGREDIENT_NAME, QUANTITY, UNIT_ABBREVIATION) VALUES (1,'butter',4,'tsp');

INSERT INTO AccountIngredient(USERNAME, INGREDIENT_NAME) VALUES ('jsmith', 'butter');
INSERT INTO AccountIngredient(USERNAME, INGREDIENT_NAME) VALUES ('jsmith', 'egg');
INSERT INTO AccountIngredient(USERNAME, INGREDIENT_NAME) VALUES ('jsmith', 'garlic');
INSERT INTO AccountIngredient(USERNAME, INGREDIENT_NAME) VALUES ('jsmith', 'olive oil');
INSERT INTO AccountIngredient(USERNAME, INGREDIENT_NAME) VALUES ('jsmith', 'milk');
INSERT INTO AccountIngredient(USERNAME, INGREDIENT_NAME) VALUES ('jsmith', 'salt');
INSERT INTO AccountIngredient(USERNAME, INGREDIENT_NAME) VALUES ('jsmith', 'pepper');